// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sigorta_teklif.DataAccess;

#nullable disable

namespace sigorta_teklif.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sigorta_teklif.Entity.Applicant", b =>
                {
                    b.Property<int>("ApplicantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantID");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("sigorta_teklif.Entity.SigortaPolicy", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Offer")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SigortaEttirenID")
                        .HasColumnType("int");

                    b.Property<int>("SigortaliID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PolicyID");

                    b.HasIndex("SigortaEttirenID");

                    b.HasIndex("SigortaliID");

                    b.ToTable("SigortaPolicies");
                });

            modelBuilder.Entity("sigorta_teklif.Entity.SigortaPolicy", b =>
                {
                    b.HasOne("sigorta_teklif.Entity.Applicant", "SigortaEttiren")
                        .WithMany("SigortaEttirenPolicies")
                        .HasForeignKey("SigortaEttirenID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("sigorta_teklif.Entity.Applicant", "Sigortali")
                        .WithMany("SigortalıPolicies")
                        .HasForeignKey("SigortaliID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SigortaEttiren");

                    b.Navigation("Sigortali");
                });

            modelBuilder.Entity("sigorta_teklif.Entity.Applicant", b =>
                {
                    b.Navigation("SigortaEttirenPolicies");

                    b.Navigation("SigortalıPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
